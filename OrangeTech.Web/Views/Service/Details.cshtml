@model OrangeTech.Models.Models.Service

@{
    ViewData["Title"] = "Услуги";
}
<div class="content">
    <div class="left-side">
        <div class="slider-work">
            <div class="slider__wrapper">
                @foreach (var item in Model.Images)
                {
                    <div class="slider__item">
                        <div>
                            <img height="350" width="500" class="image-fit" src="data:image/jpeg;base64,@(Convert.ToBase64String(item.Img))" />
                        </div>
                    </div>
                }
            </div>
        </div>
        <div class="portfolio">
            @foreach (var item in Model.Images)
            {
                <div class="photo-item">
                    <img height="50" width="80" class="image-fit" src="data:image/jpeg;base64,@(Convert.ToBase64String(item.Img))" />
                </div>
            }
        </div>
    </div>
    <div class="right-side">
        <div class="work-name">
            <h4 class="work-name-text">@Model.Name</h4>
        </div>
        <div class="work-description">
            <p class="description-text">
                @Model.FullDescription
            </p>
        </div>

    </div>
</div>

<div class="bottom-container">
    <div>
        <a asp-action="GetAll">Назад</a>
    </div>
</div>

<link href="~/css/Works.css" rel="stylesheet" />

<script>
    try {
        var el = document.getElementsByClassName("nav__link");
        var url = document.location.href;
        for (var i = 0; i < el.length; i++) {
            if (url == el[i].href) {
                el[i].className += " act";
            }

        }
    } catch (e) {
        alert(error);
    }
</script>
<script>

     function changeImg(item) {
        _transform = 100;
    }
    'use strict';
    var multiItemSlider = (function () {
        return function (selector, config) {
            var
                _mainElement = document.querySelector(selector), // основный элемент блока
                _sliderWrapper = _mainElement.querySelector('.slider__wrapper'), // обертка для .slider-item
                _sliderItems = _mainElement.querySelectorAll('.slider__item'), // элементы (.slider-item)
                _sliderControls = _mainElement.querySelectorAll('.slider__control'), // элементы управления
                _sliderControlLeft = _mainElement.querySelector('.slider__control_left'), // кнопка "LEFT"
                _sliderControlRight = _mainElement.querySelector('.slider__control_right'), // кнопка "RIGHT"
                _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width), // ширина обёртки
                _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width), // ширина одного элемента
                _positionLeftItem = 0, // позиция левого активного элемента
                _transform = 0, // значение транфсофрмации .slider_wrapper
                _step = _itemWidth / _wrapperWidth * 100, // величина шага (для трансформации)
                _items = [], // массив элементов
                _interval = 0,
                _config = {
                    isCycling: false, // автоматическая смена слайдов
                    direction: 'right', // направление смены слайдов
                    interval: 7000, // интервал между автоматической сменой слайдов
                    pause: true // устанавливать ли паузу при поднесении курсора к слайдеру
                };

            for (var key in config) {
                if (key in _config) {
                    _config[key] = config[key];
                }
            }

            // наполнение массива _items
            _sliderItems.forEach(function (item, index) {
                _items.push({ item: item, position: index, transform: 0 });
            });

            var position = {
                getItemMin: function () {
                    var indexItem = 0;
                    _items.forEach(function (item, index) {
                        if (item.position < _items[indexItem].position) {
                            indexItem = index;
                        }
                    });
                    return indexItem;
                },
                getItemMax: function () {
                    var indexItem = 0;
                    _items.forEach(function (item, index) {
                        if (item.position > _items[indexItem].position) {
                            indexItem = index;
                        }
                    });
                    return indexItem;
                },
                getMin: function () {
                    return _items[position.getItemMin()].position;
                },
                getMax: function () {
                    return _items[position.getItemMax()].position;
                }
            }

            var _transformItem = function (direction) {
                var nextItem;
                if (direction === 'right') {
                    _positionLeftItem++;
                    if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) > position.getMax()) {
                        nextItem = position.getItemMin();
                        _items[nextItem].position = position.getMax() + 1;
                        _items[nextItem].transform += _items.length * 100;
                        _items[nextItem].item.style.transform = 'translateX(' + _items[nextItem].transform + '%)';
                    }
                    _transform -= _step;
                }
                if (direction === 'left') {
                    _positionLeftItem--;
                    if (_positionLeftItem < position.getMin()) {
                        nextItem = position.getItemMax();
                        _items[nextItem].position = position.getMin() - 1;
                        _items[nextItem].transform -= _items.length * 100;
                        _items[nextItem].item.style.transform = 'translateX(' + _items[nextItem].transform + '%)';
                    }
                    _transform += _step;
                }
                if (direction === 'changeItem') {

                    _transform += 100;
                }
                _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
            }

            var _cycle = function (direction) {
                if (!_config.isCycling) {
                    return;
                }
                _interval = setInterval(function () {
                    _transformItem(direction);
                }, _config.interval);
            }

            // обработчик события click для кнопок "назад" и "вперед"
            var _controlClick = function (e) {
                if (e.target.classList.contains('slider__control')) {
                    e.preventDefault();
                    var direction = "changeItem";
                    if (e.target.classList.contains('slider__control_right')) {
                        direction = "right";
                    }
                    else if (e.target.classList.contains('slider__control_left')) {
                        direction = "left";
                    }
                    _transformItem(direction);
                    clearInterval(_interval);
                    _cycle(_config.direction);
                }
            };

            var _setUpListeners = function () {
                // добавление к кнопкам "назад" и "вперед" обрботчика _controlClick для событя click
                _sliderControls.forEach(function (item) {
                    item.addEventListener('click', _controlClick);
                });
                if (_config.pause && _config.isCycling) {
                    _mainElement.addEventListener('mouseenter', function () {
                        clearInterval(_interval);
                    });
                    _mainElement.addEventListener('mouseleave', function () {
                        clearInterval(_interval);
                        _cycle(_config.direction);
                    });
                }
            }

            // инициализация
            _setUpListeners();
            _cycle(_config.direction);

            return {
                right: function () { // метод right
                    _transformItem('right');
                },
                left: function () { // метод left
                    _transformItem('left');
                },
                stop: function () { // метод stop
                    _config.isCycling = false;
                    clearInterval(_interval);
                },
                cycle: function () { // метод cycle
                    _config.isCycling = true;
                    clearInterval(_interval);
                    _cycle();
                }
            }

        }
    }());

    var slider = multiItemSlider('.slider-work', {
        isCycling: true
    })


</script>